package cn.itcast.net.p1.uploadpic;


import java.awt.Button;
import java.awt.FileDialog;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Panel;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class TextFileViewer extends Frame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1314L;
	String directory;// 在FileDialog显示默认目录
	TextArea textarea;// 显示文本文件区域

	// 构造方法：打开一个浏览窗口
	public TextFileViewer() {
		this(null, null);

	}

	// 构造方法：显示当前目录下的文件
	public TextFileViewer(String filename) {
		this(null, filename);
	}
	//构造方法：创建用来显示指定目录指定文件内容的TextFileViewer对象
	public TextFileViewer(String directory, String filename) {
		super();//创建框架
		// 当用户请求时销毁窗口
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {

				dispose();// 销毁
			}
		});
		// 创建一个用来显示文本内容的区域
		textarea = new TextArea("", 24, 80);
		textarea.setFont(new Font("Mono", Font.PLAIN, 12));
		textarea.setEditable(false);
		this.add("Center", textarea);
		// 创建一个包括两个按钮控件面板
		Panel mypanel = new Panel();
		mypanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 5));
		this.add(mypanel, "South");
		// 创建按钮控件，关且处理单击按钮事件
		Font font = new Font("San", Font.BOLD, 14);
		Button btnOpenFile = new Button("打开文件");
		Button btnClose = new Button("关闭");
		btnOpenFile.addActionListener(this);
		btnOpenFile.setActionCommand("open");
		btnOpenFile.setFont(font);
		btnClose.addActionListener(this);
		btnClose.setActionCommand("close");
		btnClose.setFont(font);
		mypanel.add(btnOpenFile);
		mypanel.add(btnClose);
		this.pack();//根据窗口，按钮显示的比例适当
		// 指明目录
		if (directory == null) {
			File f;
			if ((filename != null) && (f = new File(filename)).isAbsolute()) {
				directory = f.getParent();
				filename = f.getName();
			} else
				directory = System.getProperty("user.dir");
		}
		this.directory = directory;// 记住目录
		setFile(directory, filename);// 载入并显示目录

	}

	public void setFile(String directory, String filename) {
		if((filename==null)||(filename.length()==0))
			return;
		File f;
		FileReader in=null;
		//读取并且显示文件内容
		//因为是在读取文本，所以使用FileReader
		
		try {
			f=new File(directory,filename);//创建一个File对象
			in=new FileReader(f);//创建一个读取的字符流
			
			char[] buffer=new char[1024];//每次读取1K的字符
			int len;//每次读入的字符数
			textarea.setText("");//清除文本区域
			while((len=in.read(buffer))!= -1);{//读取一批字符
			String s=new String(buffer,0,len);//转化为一个字符串
			textarea.append(s);//显示文本
			}
			this.setTitle("显示的文件"+filename);
			textarea.setCaretPosition(0);
			
			}
		 catch(IOException e){
			 textarea.setText(e.getClass().getName()+":"+e.getMessage());
			 this.setTitle("TextFileViewer:"+filename+":I/O Exception");
			 
		 }
		finally{
			try{
				if(in!=null)
				in.close();
				
			}catch(IOException e){
				
			}
		}
		//public void actionPerformed(ActionEvent e){
			
				
				
		}
		public static void main(String[] args) throws IOException{
			Frame myFrame = new TextFileViewer();
			myFrame.addWindowListener(new WindowAdapter() {
				public void windowClosed(WindowEvent e) {
				     System.exit(0);	
				}
			});
			myFrame.setVisible(true);
			
		}
	
		
	
	public void actionPerformed(ActionEvent e) {
		String cmd=e.getActionCommand();
		if(cmd.equals("open")){
			FileDialog myFileDialog =new FileDialog(this,"Open File",FileDialog.LOAD);
			myFileDialog.setDirectory(directory);
			myFileDialog.setVisible(true);
			directory=myFileDialog.getDirectory();
			setFile(directory, myFileDialog.getFile());
			myFileDialog.dispose();
		}else if(cmd.equals("close"))
			this.dispose();
	}

}
